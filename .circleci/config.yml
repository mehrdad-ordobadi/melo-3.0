version: 2.1
jobs:
  build_and_test:
    docker:
      - image: ubuntu:latest
    steps:
      - checkout
      - run:
          name: install dependencies
          command: | 
            apt update
            apt install  -y python3 python3-pip
            pip3 install -r requirements.txt
      - run:
          name: create db
          command: | 
            cd app && mkdir instance
            python3 create_tables.py
      # - run:
      #     name: lint
      #     command: cd app && flake8 app.py
      - run:
          name: test
          command: pytest
          
  push_to_main:
    docker:
      - image: ubuntu:latest
    steps:
      - checkout
      - run:
          name: install git
          command: apt update && apt install -y git
      - run:
          name: Push to main
          command: |
            git config --global user.email "$GIT_EMAIL"
            git config --global user.name "$GIT_USERNAME"
            git checkout main
            git merge $CIRCLE_BRANCH
            git push origin main
  dockerize_app:
    docker:
      - image: docker:stable-git
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      - run:  
          name: build docker image
          command: |
            docker build -t $DOCKERHUB_USERNAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1 .

      - run:
          name: install trivy
          command: |
            apk --no-cache update
            apk --no-cache add curl
            curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v0.18.3

      - run:
          name: scan docker image with trivy
          command: |
            OUTPUT=$(trivy image --severity HIGH,CRITICAL --format template --template '{{- range . }}{{- range .Vulnerabilities }}- Severity: {{ .Severity }}, ID: {{ .VulnerabilityID }}, PkgName: {{ .PkgName }}\n{{- end }}{{- end }}' $DOCKERHUB_USERNAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1)
            echo -e "$OUTPUT" > trivy-report.txt

      - persist_to_workspace:
          root: .  # or the directory where trivy-report.txt is located
          paths:
            - trivy-report.txt

      - run:
          name: push docker image
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $DOCKERHUB_USERNAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1

  send_discord_notification:
    docker:
      - image: archlinux:base
    steps:
      - attach_workspace:
          at: .
      - run:
          command: |
            pacman -Syu jq --noconfirm
            MESSAGE="Docker image $DOCKERHUB_USERNAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1 sumbitted by $CIRCLE_USERNAME has been pushed to DockerHub \nThe following msg is the content of trivy report on this image:"
            curl -H "Content-Type: application/json" \
                -X POST \
                -d "{\"content\": \"$MESSAGE\"}" \
                $DC_WEBHOOK
            CONTENT=$(< trivy-report.txt)
            JSON_PAYLOAD=$(jq -n --arg content "$CONTENT" '{content: $content}')
            echo $CONTENT
            curl -H "Content-Type: application/json" \
              -X POST \
              -d "$JSON_PAYLOAD" \
              $DC_WEBHOOK

workflows:
  test_and_merge:
    jobs:
      - build_and_test:
          filters:
            branches:
              only: test
      - push_to_main:
          requires:
            - build_and_test
          filters:
            branches:
              only: test
  dockerize_and_push:
    jobs:
      - dockerize_app:
          filters:
            branches:
              only: main
      - send_discord_notification: # Job name, must match exactly
          requires:
            - dockerize_app
          filters:
            branches:
              only: main

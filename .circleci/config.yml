version: 2.1
jobs:
  build_and_test:
    docker:
      - image: ubuntu:latest
    steps:
      - checkout
      - run:
          name: install dependencies
          command: | 
            apt update
            apt install  -y python3 python3-pip
            pip3 install -r requirements.txt
      - run:
          name: create db
          command: | 
            cd app && mkdir instance
            python3 create_tables.py
      # - run:
      #     name: lint
      #     command: cd app && flake8 app.py
      - run:
          name: test
          command: pytest
          
  push_to_main:
    docker:
      - image: ubuntu:latest
    steps:
      - checkout
      - run:
          name: install git
          command: apt update && apt install -y git
      - run:
          name: Push to main
          command: |
            git config --global user.email "$GIT_EMAIL"
            git config --global user.name "$GIT_USERNAME"
            git checkout main
            git merge $CIRCLE_BRANCH
            git push origin main
  dockerize_app:
    docker:
      - image: docker:stable-git
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install jq
          command: apk add --no-cache jq curl
      - run:
          name: fetch latest docker tag
          command: |
            echo "https://hub.docker.com/v2/repositories/$DOCKERHUB_USERNAME/$GH_REPONAME/tags/"
            LATEST_TAG=$(curl -s "https://hub.docker.com/v2/repositories/$DOCKERHUB_USERNAME/$CIRCLE_PROJECT_REPONAME/tags/" | jq -r '.results | .[0] | .name // "0.0.0"')
            echo "Latest tag: $LATEST_TAG"
          environment:
            LATEST_TAG: $LATEST_TAG
            # echo "export LATEST_TAG=$LATEST_TAG" >> $BASH_ENV
      - run:
          name: increment tag
          command: |
            source $BASH_ENV
            echo $LATEST_TAG
            # IFS='.' read -ra VER \<<< "$LATEST_TAG"
            # VER[2]=$((VER[2]+1))
            # NEW_TAG="${VER[0]}.${VER[1]}.${VER[2]}"
            # echo "export NEW_TAG=${NEW_TAG}" >> $BASH_ENV
            # echo "New tag: $NEW_TAG"

      # - run:  
      #     name: build docker image
      #     command: |
      #       docker build -t $DOCKERHUB_USERNAME/$CIRCLE_PROJECT_REPONAME:$NEW_TAG .
      # - run:
      #     name: push docker image
      #     command: |
      #       echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      #       docker push $DOCKERHUB_USERNAME/$CIRCLE_PROJECT_REPONAME:$NEW_TAG

workflows:
  test_and_merge:
    jobs:
      - build_and_test:
          filters:
            branches:
              only: test
      - push_to_main:
          requires:
            - build_and_test
          filters:
            branches:
              only: test
  dockerize_and_push:
    jobs:
      - dockerize_app:
          filters:
            branches:
              only: main
